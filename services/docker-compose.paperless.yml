version: '3.8'

services:
    paperless:
        image: ghcr.io/paperless-ngx/paperless-ngx:${DOCKER_PAPERLESS_VERSION}
        #build: ./paperless-docker
        container_name: paperless
        hostname: paperless.${DOMAINNAME}
        restart: unless-stopped
        expose:
            - 8000
        healthcheck:
            test: ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:8000"]
            interval: 30s
            timeout: 10s
            retries: 5
        volumes:
            #- paperless-data:/usr/src/paperless/data
            - paperless-media:/usr/src/paperless/media
            - /mnt/hdd/paperless_data/consume:/usr/src/paperless/consume
            - /mnt/hdd/paperless_data/export:/usr/src/paperless/export
            # Likewise, you can add a local path to mount a directory for
            # exporting. This is not strictly needed for paperless to
            # function, only if you're exporting your files: uncomment
            # it and fill in a local path if you know you're going to
            # want to export your documents.
            # - /path/to/another/arbitrary/place:/export
        secrets:
            - paperless_secret_key
            - paperless_db_pw
        env_file:
            - docker-compose.base.env
        #env_file:
        #    - ./services/docker-compose.paperless.env
        # The reason the line is here is so that the webserver that doesn't do
        # any text recognition and doesn't have to install unnecessary
        # languages the user might have set in the env-file by overwriting the
        # value with nothing.
        environment:
            - PAPERLESS_REDIS=redis://paperless-broker:6379
            - PAPERLESS_TIKA_ENABLED=0
            - PAPERLESS_DBHOST=paperless-db
            - PAPERLESS_DBNAME=paperless
            - PAPERLESS_DBUSER=paperless
            - PAPERLESS_DBPASS_FILE=/run/secrets/paperless_db_pw
            - PAPERLESS_TIME_ZONE=Europe/Berlin
            - PAPERLESS_OCR_LANGUAGES=deu eng spa
            - PAPERLESS_OCR_LANGUAGE=deu
            - PAPERLESS_URL=https://paperless.${DOMAINNAME}
            - USERMAP_UID=1000
            - USERMAP_GID=1000
            #- PAPERLESS_TRASH_DIR=...
            - PAPERLESS_FILENAME_FORMAT={correspondent}/{created}_{title}
            - PAPERLESS_SECRET_KEY_FILE=/run/secrets/paperless_secret_key
            - PAPERLESS_TASK_WORKERS=1
            - PAPERLESS_THREADS_PER_WORKER=2
            - PAPERLESS_TRAIN_TASK_CRON=5 0 */1 * *
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.paperless.rule=Host(`paperless.${DOMAINNAME}`)"
            - "traefik.http.routers.paperless.tls=true"
        networks:
            podewitz_local_net:
                aliases:
                    - paperless.${DOMAINNAME}
                ipv4_address: 172.25.0.80
        depends_on:
            - reverse-proxy
            - paperless-db
            - paperless-broker

    paperless-broker:
        image: docker.io/library/redis:${DOCKER_PAPERLESS_REDIS_VERSION}
        container_name: paperless-broker
        hostname: paperless-broker.${DOMAINNAME}
        restart: unless-stopped
        networks:
          podewitz_local_net:
              aliases:
                  - paperless-broker.${DOMAINNAME}
              ipv4_address: 172.25.0.81


    paperless-db:
        image: docker.io/library/postgres:${DOCKER_PAPERLESS_POSTGRES_VERSION}
        container_name: paperless-db
        hostname: paperless-db.${DOMAINNAME}
        restart: unless-stopped
        volumes:
            - paperless-db-data:/var/lib/postgresql/dat
        environment:
            POSTGRES_DB: paperless
            POSTGRES_USER: paperless
            POSTGRES_PASSWORD: paperless
        networks:
          podewitz_local_net:
              aliases:
                  - paperless-db.${DOMAINNAME}
              ipv4_address: 172.25.0.82


volumes:
    paperless-media:
        name: paperless-media
        labels:
            paperless-media.service_owner: "paperless"
    paperless-data:
        name: paperless-data
        labels:
            paperless-data.service_owner: "paperless"
    paperless-db-data:
        name: paperless-db-data
        labels:
            paperless-data.service_owner: "paperless"
